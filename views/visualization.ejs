<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Data Visualization</title>
    <link rel="stylesheet" href="/styles.css">
    <!-- Подключаем Chart.js и Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <%- include('partials/navbar') %>

    <h1>Data Visualization</h1>

    <!-- Навигационная панель -->
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <a class="navbar-brand" href="/">Home</a>
        <ul class="navbar-nav ml-auto">
            <li class="nav-item">
                <a class="nav-link" href="/portfolio/view">Portfolio</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/portfolio/visualization">Visualization</a>
            </li>
            <li class="nav-item" id="logoutButton" style="display: none;">
                <a class="nav-link" href="#" onclick="logout()">Logout</a>
            </li>
        </ul>
    </nav>

    <!-- Форма для создания графика -->
    <h2>Create New Visualization</h2>
    <form id="chartForm">
        <label for="chartTitle">Chart Title:</label>
        <input type="text" id="chartTitle" name="chartTitle" required>
        <br>
        <label for="data">Data (comma separated):</label>
        <input type="text" id="data" name="data" required>
        <br>
        <label for="labels">Labels (comma separated):</label>
        <input type="text" id="labels" name="labels" required>
        <br>
        <button type="submit">Create Chart</button>
    </form>

    <!-- Холст для отображения графика -->
    <h3>Your Chart:</h3>
    <canvas id="myChart"></canvas>

    <!-- Добавляем JavaScript -->
    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            // Проверка, есть ли токен, и отображение кнопки Logout
            const token = localStorage.getItem('token'); // Извлекаем токен из localStorage
            const logoutButton = document.getElementById('logoutButton');

            if (token) {
                logoutButton.style.display = 'block'; // Показываем кнопку Logout

                // Отправляем запрос с токеном в заголовке
                try {
                    const response = await fetch('/portfolio/visualization', {
                        method: 'GET',
                        headers: {
                            'Authorization': `Bearer ${token}`, // Добавляем токен в заголовки
                        },
                    });

                    if (!response.ok) {
                        const error = await response.json();
                        alert(`Error: ${error.message}`);
                    }
                } catch (err) {
                    console.error('Error fetching data:', err);
                    alert('Failed to load data.');
                }
            } else {
                alert('You must be logged in to view this page.');
                window.location.href = '/auth/login';
            }
        });

        // Добавляем логаут функцию
        function logout() {
            localStorage.removeItem('token'); // Удаляем токен из localStorage
            alert('Logged out successfully!');
            window.location.href = '/auth/login'; // Перенаправляем на страницу входа
        }

        document.addEventListener('DOMContentLoaded', () => {
            const form = document.getElementById('chartForm');
            const chartTitleInput = document.getElementById('chartTitle');
            const dataInput = document.getElementById('data');
            const labelsInput = document.getElementById('labels');
            const ctx = document.getElementById('myChart').getContext('2d');

            form.addEventListener('submit', (event) => {
                event.preventDefault();

                const chartTitle = chartTitleInput.value;
                const data = dataInput.value.split(',').map(num => parseFloat(num.trim()));
                const labels = labelsInput.value.split(',').map(label => label.trim());

                // Создаем график с использованием Chart.js
                new Chart(ctx, {
                    type: 'bar', // Тип графика: bar, line, pie и другие
                    data: {
                        labels: labels,
                        datasets: [{
                            label: chartTitle,
                            data: data,
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            });
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
